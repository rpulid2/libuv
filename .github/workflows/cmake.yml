name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Setup Coverity
      working-directory: ${{github.workspace}}/build
      run: |
        wget -q https://scan.coverity.com/download/linux64 --post-data "token=${{ secrets.COVERITY_SCAN_TOKEN }}&project=libuv_fork"
        tar zxvf linux64
        echo "cov-analysis-linux64-*/bin" >> $GITHUB_PATH
        ${{github.workspace}}/build/cov-analysis-linux64-2023.6.2/bin/cov-configure --template --compiler cc --comptype gcc
        ${{github.workspace}}/build/cov-analysis-linux64-2023.6.2/bin/cov-configure --template --compiler c++ --comptype g++
        ${{github.workspace}}/build/cov-analysis-linux64-2023.6.2/bin/cov-configure --gcc
        ${{github.workspace}}/build/cov-analysis-linux64-2023.6.2/bin/cov-configure --clang
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
       ${{github.workspace}}/build/cov-analysis-linux64-2023.6.2/bin/cov-build --dir ${{github.workspace}}/build/cov-int cmake --build . --config $BUILD_TYPE
       tar czvf project.tgz ${{github.workspace}}/build/cov-int
       curl -d token=${{ secrets.COVERITY_SCAN_TOKEN }} \
         -d email=${{ secrets.COVERITY_SCAN_EMAIL }} \
         -d file=@project.tgx \
         -d version="Version" \
         -d description="Test GH Action" \
         https://scan.coverity.com/projects/22799/builds/init \
         | tee response
       
    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

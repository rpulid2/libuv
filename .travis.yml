language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    #    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    #    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Misc
    - RUN_TESTS=false
    - COVERAGE=false
    - secure: "xxxx"

matrix:
  include:
    - os: linux
      dist: trusty
      compiler: gcc
      addons:
       apt:
         packages: &precise_latest_boost_packages
           - gcc-4.8
           - g++-4.8
           #- gcov-4.9
           - clang-3.7
           - valgrind
           # Misc
           #- python-yaml
           #- lcov
           #- libopencv-dev
         sources: &precise_latest_boost_sources
           - ubuntu-toolchain-r-test
           - llvm-toolchain-precise-3.7

addons:
         coverity_scan:
                 project:
                        name: rpulid2/libuv
                        version: master
                        description: Libuv fork for coverity scan
                 notification_email: rodrigo.pulido@intel.com
                 build_command_prepend: mkdir -p build && cd build && cmake ../
                 build_command: make
                 branch_pattern: master


before_install:
    # Combine global build options with OS/compiler-dependent options
    - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
    - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
    - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
    - echo ${PATH}
    - echo ${CXX}
    - ${CXX} --version
    - ${CXX} -v
      #- sudo pip install codecov
    
    # Download and install recent cmake
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.1-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      fi

script:
    ############################################################################
    # Build main
    ############################################################################
    - wget https://scan.coverity.com/download/linux64 --post-data "token=1xppCsz11eCJSkAFh515Fw&project=libuv_fork" -O coverity_tool.tgz
    - tar -xvzf coverity_tool.tgz
    - ls
    - mkdir -p build
    - cd build
    - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON .. 
    - make

env:
  global:
    # COVERITY_SCAN_TOKEN
    # ** specific to your project **
    - secure: "xxxx"

addons:
  coverity_scan:

    # GitHub project metadata
    # ** specific to your project **
    project:
      name: rpulid2/libuv_fork
      version: coverity_scan
      description: Libuv for for Coverity testting

    # Where email notification of build analysis results will be sent
    notification_email: rodrigo.pulido@intel.com

    # Commands to prepare for build_command
    # ** likely specific to your build **
    build_command_prepend:  cmake .

    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    # ** likely specific to your build **
    build_command: make

    # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: coverity_scan

script: if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then cmake . && make ; fi

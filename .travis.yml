#travis configuration for coverage testing
language: c

#sudo: false # only for faster builds

# Compiler selection
compiler:
  - clang
  - gcc


# Build steps
script: if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make ; fi

env:
        global:
                # COVERITY_SCAN_TOKEN
                # ** specific to your project **
                - secure: "xxxx"

install:
            - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
            - echo ${PATH}
            - echo ${CXX}
            - ${CXX} --version
            - ${CXX} -v
           # Download and install recent cmake
               - |
                 if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
                    CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.1-Linux-x86_64.tar.gz"
                    mkdir -p ${DEPS_DIR}/cmake
                    travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
                    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
                 fi
addons:
        coverity_scan:
                project:
                        name: libuv_fork
                        version: master
                        description: Libuv fork for coverity scan

                notification_email: rodrigo.pulido@intel.com
                build_command_prepend: mkdir -p build && cd build
                build_command_prepend: cmake ../
                build_command: make
                branch_pattern: coverity_scan
